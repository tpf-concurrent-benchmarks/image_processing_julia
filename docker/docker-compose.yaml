version: "3.7"

x-worker-template: &worker-template
  image: julia_worker
  tty: true
  stdin_open: true
  environment:
    - LOCAL=${LOCAL}
    - NODE_ID=worker_{{.Task.Slot}}
    - TASK_SLOT={{.Task.Slot}}
  command: /bin/bash -c "/usr/sbin/sshd -D"

x-deploy-template: &deploy-template
  resources:
    limits:
      memory: 2G
  restart_policy:
    condition: none

services:
  graphite:
    image: graphiteapp/graphite-statsd:1.1.10-4
    volumes:
      - "../configs/statsd.config.js:/opt/statsd/config.js:ro"
      - "../configs/graphite.storage-schemas.conf:/opt/graphite/conf/storage-schemas.conf:ro"
      - "../configs/graphite.carbon.conf:/opt/graphite/conf/carbon.conf:ro"
      - "../graphite:/opt/graphite/storage/:rw"
    ports:
      - "8080:8080"
      - "8125:8125/udp"

  grafana:
    image: grafana/grafana:latest
    ports:
      - "8081:3000"
    volumes:
      - "grafana_config:/var/lib/grafana"
    depends_on:
      - graphite

  renderer:
    image: grafana/grafana-image-renderer:latest
    ports:
      - "8082:8081"

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:v0.47.0
    command: >
      -storage_driver="statsd"
      -storage_driver_host="graphite:8125"
      -storage_driver_db="cadvisor"
      -storage_driver_buffer_duration="10s"
      --enable_metrics=cpu,cpuLoad,disk,diskIO,memory,network
    depends_on:
      - graphite
    volumes:
     - "/:/rootfs:ro"
     - "/var/run:/var/run:rw"
     - "/sys:/sys:ro"
     - "/var/lib/docker/:/var/lib/docker:ro"
     - "/dev/disk/:/dev/disk:ro"

  format_worker:
    <<: *worker-template
    volumes:
      - "../src:/opt/app"
      - "../ips/format:/opt/app/ips"
      - "../shared:/opt/app/shared"
    deploy:
      <<: *deploy-template
      replicas: 1

  resolution_worker:
    <<: *worker-template
    volumes:
      - "../src:/opt/app"
      - "../ips/resolution:/opt/app/ips"
      - "../shared:/opt/app/shared"
    deploy:
      <<: *deploy-template
      replicas: 1

  size_worker:
    <<: *worker-template
    volumes:
      - "../src:/opt/app"
      - "../ips/size:/opt/app/ips"
      - "../shared:/opt/app/shared"
    deploy:
      <<: *deploy-template
      replicas: 1

  manager:
    image: julia_manager
    tty: true
    stdin_open: true
    command: /bin/bash
    depends_on:
      - format_worker
      - resolution_worker
      - size_worker
    volumes:
      - "../src:/opt/app"
      - "../ips:/opt/app/ips:ro"
      - "../shared:/opt/app/shared"
    deploy:
      <<: *deploy-template
    environment:
      - LOCAL=${LOCAL}
      - NODE_ID=manager

  ips_getter:
    image: ubuntu
    command: ./get_ips.sh
    volumes:
      - "../get_ips.sh:/get_ips.sh:ro"
      - type: bind
        source: ../ips
        target: /ips
        read_only: false
    deploy:
      restart_policy:
        condition: none
      placement:
        constraints:
          - node.role == manager

volumes:
  grafana_config:
    external: true
